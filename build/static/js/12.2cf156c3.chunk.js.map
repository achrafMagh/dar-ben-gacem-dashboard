{"version":3,"sources":["components/category/PressTable.js","pages/Press.js"],"names":["PressTable","data","lang","isCheck","presses","setIsCheck","useParamId","title","serviceId","handleModalOpen","handleUpdate","useToggleDrawer","length","DeleteModal","id","MainDrawer","PressDrawer","map","press","className","_id","substring","image","src","process","alt","source","ShowHideButton","status","isPublished","to","Tooltip","Icon","FiZoomIn","bgColor","EditDeleteButton","Press","toggleDrawer","useContext","SidebarContext","loading","useAsync","PressServices","getAllPress","allId","t","useTranslation","handleSubmitCategory","categoryRef","totalResults","resultsPerPage","dataTable","serviceData","handleChangePage","filename","isDisabled","handleSelectFile","handleUploadMultiple","handleRemoveSelectFile","searchRef","useFilter","isCheckAll","setIsCheckAll","useState","showChild","setShowChild","PageTitle","ids","BulkActionDrawer","onSubmit","ref","type","placeholder","onClick","TableLoading","row","col","width","height","onChange","label","NotFound"],"mappings":"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","file":"static/js/12.2cf156c3.chunk.js","sourcesContent":["import { Avatar, TableBody, TableCell, TableRow } from \"@windmill/react-ui\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//internal import\r\nimport useToggleDrawer from \"hooks/useToggleDrawer\";\r\nimport DeleteModal from \"components/modal/DeleteModal\";\r\nimport MainDrawer from \"components/drawer/MainDrawer\";\r\nimport PressDrawer from \"components/drawer/PressDrawer\";\r\nimport ShowHideButton from \"components/table/ShowHideButton\";\r\nimport EditDeleteButton from \"components/table/EditDeleteButton\";\r\nimport Tooltip from \"components/tooltip/Tooltip\";\r\nimport { FiZoomIn } from \"react-icons/fi\";\r\n\r\nconst PressTable = ({\r\n  data,\r\n  lang,\r\n  isCheck,\r\n  presses,\r\n  setIsCheck,\r\n  useParamId,\r\n}) => {\r\n  const { title, serviceId, handleModalOpen, handleUpdate } = useToggleDrawer();\r\n\r\n  return (\r\n    <>\r\n      {isCheck?.length < 1 && (\r\n        <DeleteModal useParamId={useParamId} id={serviceId} title={title} />\r\n      )}\r\n\r\n      <MainDrawer>\r\n        <PressDrawer id={serviceId} data={data} lang={lang} />\r\n      </MainDrawer>\r\n\r\n      <TableBody>\r\n        {presses?.map((press) => (\r\n          <TableRow key={press._id}>\r\n            <TableCell className=\"font-semibold uppercase text-xs h-full\">\r\n              {press?._id?.substring(20, 24)}\r\n            </TableCell>\r\n            <TableCell>\r\n              {press?.image ? (\r\n                <Avatar\r\n                  className=\"hidden mr-3 md:block bg-gray-50 p-1\"\r\n                  src={process.env.REACT_APP_UPLOAD_URL + \"/\" + press.image}\r\n                  alt={press?.image}\r\n                />\r\n              ) : (\r\n                <Avatar\r\n                  src=\"https://res.cloudinary.com/ahossain/image/upload/v1655097002/placeholder_kvepfp.png\"\r\n                  alt=\"product\"\r\n                  className=\"hidden p-1 mr-2 md:block bg-gray-50 shadow-none\"\r\n                />\r\n              )}\r\n            </TableCell>\r\n            <TableCell className=\"text-sm\">{press?.title}</TableCell>\r\n\r\n            <TableCell className=\"text-sm\">{press?.source}</TableCell>\r\n\r\n            <TableCell className=\"text-center\">\r\n              <ShowHideButton id={press._id} press status={press.isPublished} />\r\n            </TableCell>\r\n            <TableCell>\r\n              <div className=\"flex justify-end items-center\">\r\n                <Link\r\n                  to={`/press/${press?._id}`}\r\n                  className=\"p-2 text-gray-400 hover:text-green-600\"\r\n                >\r\n                  <Tooltip\r\n                    id=\"view\"\r\n                    Icon={FiZoomIn}\r\n                    title={\"View details\"}\r\n                    bgColor=\"#10B981\"\r\n                  />\r\n                </Link>\r\n                <EditDeleteButton\r\n                  id={press?._id}\r\n                  isCheck={isCheck}\r\n                  handleUpdate={handleUpdate}\r\n                  handleModalOpen={handleModalOpen}\r\n                  title={press?.title || \"press\"}\r\n                />\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PressTable;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Pagination,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHeader,\r\n} from \"@windmill/react-ui\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FiEdit, FiPlus, FiTrash2 } from \"react-icons/fi\";\r\n\r\n//internal import\r\n\r\nimport useAsync from \"hooks/useAsync\";\r\nimport { SidebarContext } from \"context/SidebarContext\";\r\nimport PressServices from \"services/PressServices\";\r\nimport useToggleDrawer from \"hooks/useToggleDrawer\";\r\nimport useFilter from \"hooks/useFilter\";\r\nimport DeleteModal from \"components/modal/DeleteModal\";\r\nimport BulkActionDrawer from \"components/drawer/BulkActionDrawer\";\r\nimport PageTitle from \"components/Typography/PageTitle\";\r\nimport MainDrawer from \"components/drawer/MainDrawer\";\r\nimport PressDrawer from \"components/drawer/PressDrawer\";\r\nimport TableLoading from \"components/preloader/TableLoading\";\r\nimport PressTable from \"components/category/PressTable\";\r\nimport NotFound from \"components/table/NotFound\";\r\n\r\nconst Press = () => {\r\n  const { toggleDrawer, lang } = useContext(SidebarContext);\r\n\r\n  const { data, loading } = useAsync(PressServices.getAllPress);\r\n  //const { data: getAllCategories } = useAsync(EventServices.getAllCategories);\r\n\r\n  const { allId, serviceId } = useToggleDrawer();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    handleSubmitCategory,\r\n    categoryRef,\r\n    totalResults,\r\n    resultsPerPage,\r\n    dataTable,\r\n    serviceData,\r\n    handleChangePage,\r\n    filename,\r\n    isDisabled,\r\n    handleSelectFile,\r\n    handleUploadMultiple,\r\n    handleRemoveSelectFile,\r\n    searchRef,\r\n  } = useFilter(data ? data.data : []);\r\n\r\n  // react hooks\r\n  const [isCheckAll, setIsCheckAll] = useState(false);\r\n  const [isCheck, setIsCheck] = useState([]);\r\n  const [showChild, setShowChild] = useState(false);\r\n\r\n  const handleSelectAll = () => {\r\n    setIsCheckAll(!isCheckAll);\r\n    setIsCheck(data[0]?.children.map((li) => li._id));\r\n    if (isCheckAll) {\r\n      setIsCheck([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>{\"Press\"}</PageTitle>\r\n      <DeleteModal ids={allId} setIsCheck={setIsCheck} />\r\n\r\n      <BulkActionDrawer\r\n        ids={allId}\r\n        title=\"Presses\"\r\n        lang={lang}\r\n        data={data}\r\n        isCheck={isCheck}\r\n      />\r\n\r\n      <MainDrawer>\r\n        <PressDrawer id={serviceId} data={data} lang={lang} />\r\n      </MainDrawer>\r\n\r\n      <Card className=\"min-w-0 shadow-xs overflow-hidden bg-white dark:bg-gray-800 rounded-t-lg rounded-0 mb-4\">\r\n        <CardBody>\r\n          <form\r\n            onSubmit={handleSubmitCategory}\r\n            className=\"py-3 grid gap-4 lg:gap-6 xl:gap-6 md:flex xl:flex\"\r\n          >\r\n            <div className=\"flex-grow-0 md:flex-grow lg:flex-grow xl:flex-grow\">\r\n              <Input\r\n                ref={searchRef}\r\n                type=\"search\"\r\n                className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white\"\r\n                placeholder={\"Search Press\"}\r\n              />\r\n            </div>\r\n            <div className=\"w-full md:w-48 lg:w-48 xl:w-48\">\r\n              <Button onClick={toggleDrawer} className=\"rounded-md h-12 w-full\">\r\n                <span className=\"mr-2\">\r\n                  <FiPlus />\r\n                </span>\r\n                {\"Add Press\"}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {loading ? (\r\n        <TableLoading row={12} col={6} width={190} height={20} />\r\n      ) : serviceData?.length !== 0 ? (\r\n        <TableContainer className=\"mb-8\">\r\n          <Table>\r\n            <TableHeader>\r\n              <tr>\r\n                <TableCell>{\"ID\"}</TableCell>\r\n                <TableCell>{\"Image\"}</TableCell>\r\n                <TableCell>{\"Title\"}</TableCell>\r\n                {/* <TableCell>{\"Description\"}</TableCell> */}\r\n                {/* <TableCell>{\"Link\"}</TableCell> */}\r\n                <TableCell>{\"Source\"}</TableCell>\r\n\r\n                <TableCell className=\"text-center\">{\"Published\"}</TableCell>\r\n                <TableCell className=\"text-right\">{\"Actions\"}</TableCell>\r\n              </tr>\r\n            </TableHeader>\r\n\r\n            <PressTable\r\n              data={data.data}\r\n              lang={lang}\r\n              isCheck={isCheck}\r\n              presses={dataTable}\r\n              setIsCheck={setIsCheck}\r\n              showChild={showChild}\r\n            />\r\n          </Table>\r\n\r\n          <TableFooter>\r\n            <Pagination\r\n              totalResults={totalResults}\r\n              resultsPerPage={resultsPerPage}\r\n              onChange={handleChangePage}\r\n              label=\"Table navigation\"\r\n            />\r\n          </TableFooter>\r\n        </TableContainer>\r\n      ) : (\r\n        <NotFound title=\"Sorry, There are no press releases right now.\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Press;\r\n"],"sourceRoot":""}