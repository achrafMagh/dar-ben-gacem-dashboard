{"version":3,"sources":["../../src/utils/isCheckBoxInput.ts","../../src/utils/isDateObject.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isObject.ts","../../src/logic/getEventValue.ts","../../src/logic/isNameInFieldArray.ts","../../src/logic/getNodeParentName.ts","../../src/utils/compact.ts","../../src/utils/isUndefined.ts","../../src/utils/get.ts","../../src/constants.ts","../../src/useFormContext.tsx","../../src/logic/getProxyFormState.ts","../../src/utils/isEmptyObject.ts","../../src/logic/shouldRenderFormState.ts","../../src/utils/convertToArrayPayload.ts","../../src/useSubscribe.ts","../../src/utils/isString.ts","../../src/logic/generateWatchOutput.ts","../../src/utils/isWeb.ts","../../src/utils/cloneObject.ts","../../src/utils/isPlainObject.ts","../../src/logic/appendErrors.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/focusFieldBy.ts","../../src/logic/generateId.ts","../../src/logic/getValidationModes.ts","../../src/logic/isWatched.ts","../../src/logic/updateFieldArrayRootError.ts","../../src/utils/isBoolean.ts","../../src/utils/isFileInput.ts","../../src/utils/isFunction.ts","../../src/utils/isMessage.ts","../../src/utils/isRadioInput.ts","../../src/utils/isRegex.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getRadioValue.ts","../../src/logic/getValidateError.ts","../../src/logic/getValueAndMessage.ts","../../src/logic/validateField.ts","../../src/utils/unset.ts","../../src/utils/createSubject.ts","../../src/utils/isPrimitive.ts","../../src/utils/deepEqual.ts","../../src/utils/isHTMLElement.ts","../../src/utils/isMultipleSelect.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/utils/live.ts","../../src/utils/objectHasFunction.ts","../../src/logic/getDirtyFields.ts","../../src/logic/getFieldValueAs.ts","../../src/logic/getFieldValue.ts","../../src/logic/getResolverOptions.ts","../../src/logic/getRuleValue.ts","../../src/logic/hasValidation.ts","../../src/logic/schemaErrorLookup.ts","../../src/logic/skipValidation.ts","../../src/logic/unsetEmptyArray.ts","../../src/logic/createFormControl.ts","../../src/useForm.ts","../node_modules/axios/index.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/process/browser.js","../node_modules/axios/lib/utils.js"],"names":["element","type","value","Date","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","names","name","has","substring","search","getNodeParentName","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","React","createContext","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","Object","defineProperty","get","_key","_proxyFormState","keys","length","formStateData","isEmptyObject","find","useSubscribe","props","_props","useRef","current","useEffect","subscription","disabled","subject","subscribe","next","unsubscribe","_names","formValues","isGlobal","isString","watch","add","map","fieldName","watchAll","window","HTMLElement","document","cloneObject","data","copy","Set","isWeb","Blob","FileList","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","isPlainObject","validateAllFieldCriteria","errors","message","types","test","input","replace","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","field","_f","currentField","ref","focus","refs","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isBlurEvent","some","watchName","startsWith","slice","error","fieldArrayErrors","isValidElement","RegExp","defaultResult","isValid","validResult","options","values","option","attributes","defaultReturn","previous","getValidateError","isMessage","every","isBoolean","validationData","isRegex","async","inputValue","shouldUseNativeValidation","isFieldArray","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputRef","setCustomValidity","reportValidity","isRadio","isRadioInput","isCheckBox","isRadioOrCheckbox","isEmpty","isFileInput","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getCheckboxValue","getRadioValue","getValueAndMessage","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","isEmptyArray","unset","updatePath","childObject","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","createSubject","_observers","observers","observer","push","o","deepEqual","object1","object2","isPrimitive","getTime","keys1","keys2","val1","includes","val2","owner","ownerDocument","defaultView","isHTMLElement","isConnected","markFieldsDirty","isParentNodeArray","objectHasFunction","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","setValueAs","NaN","getFieldValue","files","isMultipleSelect","selectedOptions","getFieldValueAs","_fields","criteriaMode","rule","source","schemaErrorLookup","join","foundError","pop","isTouched","isSubmitted","reValidateMode","defaultOptions","shouldFocusError","createFormControl","flushRootRender","_options","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","delayErrorCallback","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","_formValues","shouldUnregister","_stateFlags","action","unMount","array","timer","_subjects","state","validationModeBeforeSubmit","getValidationModes","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","clearTimeout","setTimeout","_updateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","argA","argB","unsetEmptyArray","getDirtyFields","_getDirty","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","shouldUpdateValid","delayError","updatedFormState","context","getResolverOptions","executeSchemaAndUpdateState","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","validateField","updateFieldArrayRootError","_removeUnmounted","live","unregister","getValues","_getWatch","generateWatchOutput","_getFieldArray","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","isWatched","onChange","getCurrentFieldValue","getEventValue","shouldSkipValidation","hasValidation","deps","skipValidation","watched","onBlur","previousErrorLookupResult","errorLookupResult","fieldNames","convertToArrayPayload","Promise","all","shouldFocus","getFieldState","invalid","clearErrors","inputName","setError","payload","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","register","disabledIsDefined","getRuleValue","fieldRef","querySelectorAll","radioOrCheckbox","isNameInFieldArray","_focusError","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","shouldSelect","select","then","useForm","_formControl","updateFormState","useState","shouldRenderFormState","getProxyFormState","module","exports","require","utils","normalizeHeaderName","enhanceError","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","defaults","transitional","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","adapter","XMLHttpRequest","process","toString","call","getDefaultAdapter","transformRequest","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","rawValue","parser","encoder","JSON","parse","trim","stringify","stringifySafely","transformResponse","this","strictJSONParsing","responseType","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","merge","Cancel","__CANCEL__","fn","thisArg","arguments","i","apply","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","indexOf","config","code","request","response","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","stack","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","resolve","reject","onCanceled","requestData","requestHeaders","done","cancelToken","signal","removeEventListener","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","toUpperCase","onreadystatechange","readyState","responseURL","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","aborted","send","Error","config1","config2","getMergedValue","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","concat","configValue","Axios","mergeConfig","axios","createInstance","defaultConfig","instance","extend","create","instanceConfig","CancelToken","isCancel","VERSION","version","promises","spread","default","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","boolean","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","promise","responseInterceptorChain","chain","shift","newConfig","onFulfilled","onRejected","getUri","handlers","use","eject","id","h","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","normalizedName","write","expires","domain","secure","cookie","isNumber","toGMTString","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","parsed","line","substr","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","hash","hostname","port","pathname","charAt","location","requestURL","thing","deprecatedWarnings","formatMessage","opt","desc","opts","console","warn","schema","allowUnknown","TypeError","executor","resolvePromise","token","_listeners","l","onfulfilled","_resolve","listener","splice","c","arr","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","getPrototypeOf","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","a","b","str","stripBOM","content","charCodeAt"],"mappings":"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","file":"static/js/1.c9e2ac65.chunk.js","sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  next: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject.subscribe({\n        next: _props.current.next,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default (\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name?: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends NativeFieldValue>(\n  field: Field,\n  inputValue: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) && isEmptyArray(objectRef)))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","export default (value: unknown): value is HTMLElement => {\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        deepEqual(data[key], formValues[key])\n          ? delete dirtyFieldsFromValues[key]\n          : (dirtyFieldsFromValues[key] = true);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UnPackAsyncDefaultValues,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n  flushRootRender: () => void,\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  const shouldCaptureDirtyFields =\n    props.resetOptions && props.resetOptions.keepDirtyValues;\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: true,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {},\n  };\n  let _fields = {};\n  let _defaultValues = isObject(_options.defaultValues)\n    ? cloneObject(_options.defaultValues) || {}\n    : {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(callback, wait);\n    };\n\n  const _updateValid = async () => {\n    if (_proxyFormState.isValid) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (value: boolean) =>\n    _proxyFormState.isValidating &&\n    _subjects.state.next({\n      isValidating: value,\n    });\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _stateFlags.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _stateFlags.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField =\n        shouldUpdateField ||\n        (_proxyFormState.dirtyFields &&\n          isPreviousDirty !== !isCurrentFieldPristine);\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.touchedFields &&\n            isPreviousFieldTouched !== isBlurEvent);\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    _updateIsValidating(false);\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    await _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(\n            field,\n            get(_formValues, _f.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n            isFieldArrayRoot,\n          );\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_stateFlags.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n          ? _defaultValues\n          : isString(names)\n          ? { [names]: defaultValue }\n          : defaultValue),\n      },\n      isGlobal,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _stateFlags.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.watch.next({\n              name,\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate &&\n      trigger(name as Path<UnPackAsyncDefaultValues<TFieldValues>>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n    !_stateFlags.mount && flushRootRender();\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({});\n\n      _updateIsValidating(true);\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        if (error) {\n          isValid = false;\n        } else if (_proxyFormState.isValid) {\n          isValid = await executeBuiltInValidation(_fields, true);\n        }\n      }\n\n      if (!isPrimitive(fieldValue) || getCurrentFieldValue() === fieldValue) {\n        field._f.deps &&\n          trigger(\n            field._f.deps as\n              | FieldPath<TFieldValues>\n              | FieldPath<TFieldValues>[],\n          );\n        shouldRenderByError(name, isValid, error, fieldState);\n      } else {\n        _updateIsValidating(false);\n      }\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _updateIsValidating(true);\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => key && get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames)\n      : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {});\n\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    focusFieldBy(\n      _fields,\n      (key) => key && get(_formState.errors, key),\n      _names.mount,\n    );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors;\n          fieldValues = values;\n        } else {\n          await executeBuiltInValidation(_fields);\n        }\n\n        if (isEmptyObject(_formState.errors)) {\n          _subjects.state.next({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          if (onInvalid) {\n            await onInvalid({ ..._formState.errors }, e);\n          }\n\n          _focusError();\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values,\n      });\n\n      _subjects.watch.next({\n        values,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    !_stateFlags.mount && flushRootRender();\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _stateFlags.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n          ? getDirtyFields(_defaultValues, formValues)\n          : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  if (isFunction(_options.defaultValues)) {\n    _options.defaultValues().then((values) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n  }\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _focusError,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _reset,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport { FieldValues, FormState, UseFormProps, UseFormReturn } from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: true,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props, () =>\n        updateFormState((formState) => ({ ...formState })),\n      ),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    next: (value: FieldValues) => {\n      if (shouldRenderFormState(value, control._proxyFormState, true)) {\n        control._formState = {\n          ...control._formState,\n          ...value,\n        };\n\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    formState.submitCount && control._focusError();\n  }, [control, formState.submitCount]);\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","module.exports = {\n  \"version\": \"0.24.0\"\n};","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n"],"sourceRoot":""}