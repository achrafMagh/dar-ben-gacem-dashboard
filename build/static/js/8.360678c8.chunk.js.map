{"version":3,"sources":["services/httpService.js","components/form/Error.js","components/form/LabelArea.js","components/form/InputArea.js","services/AdminServices.js","assets/img/login-office-light.jpg","assets/img/login-office-dark.jpg","hooks/useLoginSubmit.js","pages/Login.js"],"names":["instance","axios","create","baseURL","process","timeout","headers","Accept","interceptors","request","use","config","adminInfo","company","Cookies","get","JSON","parse","authorization","token","responseBody","response","data","requests","url","body","then","post","put","patch","delete","Error","errorName","className","message","LabelArea","label","InputArea","register","defaultValue","required","name","type","placeholder","AdminServices","registerAdmin","async","loginAdmin","forgetPassword","resetPassword","addStaff","getAllStaff","getStaffById","id","updateStaff","updateStaffStatus","deleteStaff","useLoginSubmit","loading","setLoading","useState","dispatch","useContext","AdminContext","history","useHistory","location","useLocation","handleSubmit","formState","errors","useForm","onSubmit","email","verifyEmail","password","role","pathname","res","notifySuccess","payload","set","stringify","expires","replace","catch","err","notifyError","Login","t","useTranslation","src","ImageLight","alt","ImageDark","color","disabled","to"],"mappings":"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","file":"static/js/8.360678c8.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\r\n  timeout: 50000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get('adminInfo')) {\r\n    adminInfo = JSON.parse(Cookies.get('adminInfo'));\r\n  }\r\n\r\n  let company;\r\n\r\n  if (Cookies.get('company')) {\r\n    company = Cookies.get('company');\r\n  }\r\n\r\n  // console.log('Admin Http Services Cookie Read : ' + company);\r\n  // let companyName = JSON.stringify(company);\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n      company: company ? company : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url, body) => instance.delete(url, body).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import React from \"react\";\r\nimport { Input } from \"@windmill/react-ui\";\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import requests from \"./httpService\";\r\n\r\nconst AdminServices = {\r\n  registerAdmin: async (body) => {\r\n    return requests.post(\"/admin/register\", body);\r\n  },\r\n\r\n  loginAdmin: async (body) => {\r\n    return requests.post(`/admins/login`, body);\r\n  },\r\n\r\n  forgetPassword: async (body) => {\r\n    return requests.put(\"/admin/forget-password\", body);\r\n  },\r\n\r\n  resetPassword: async (body) => {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n\r\n  addStaff: async (body) => {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff: async (body) => {\r\n    return requests.get(\"/admin\", body);\r\n  },\r\n  getStaffById: async (id, body) => {\r\n    return requests.post(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaff: async (id, body) => {\r\n    return requests.put(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaffStatus: async (id, body) => {\r\n    return requests.put(`/admin/update-status/${id}`, body);\r\n  },\r\n\r\n  deleteStaff: async (id) => {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\n\r\nexport default AdminServices;\r\n","export default __webpack_public_path__ + \"static/media/login-office-light.44062941.jpg\";","export default __webpack_public_path__ + \"static/media/login-office-dark.44062941.jpg\";","import Cookies from \"js-cookie\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { AdminContext } from \"context/AdminContext\";\r\nimport AdminServices from \"services/AdminServices\";\r\nimport { notifyError, notifySuccess } from \"utils/toast\";\r\n\r\nconst useLoginSubmit = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { dispatch } = useContext(AdminContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\r\n    setLoading(true);\r\n    const cookieTimeOut = 0.5;\r\n\r\n    if (location.pathname === \"/login\") {\r\n      AdminServices.loginAdmin({ email, password })\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoading(false);\r\n            notifySuccess(\"Login Success!\");\r\n            dispatch({ type: \"USER_LOGIN\", payload: res });\r\n            Cookies.set(\"adminInfo\", JSON.stringify(res), {\r\n              expires: cookieTimeOut,\r\n            });\r\n            history.replace(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err ? err.response.data.message : err.message);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n  return {\r\n    onSubmit,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useLoginSubmit;\r\n","import React from \"react\";\r\nimport { Button } from \"@windmill/react-ui\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Error from \"components/form/Error\";\r\nimport LabelArea from \"components/form/LabelArea\";\r\nimport InputArea from \"components/form/InputArea\";\r\nimport ImageLight from \"assets/img/login-office-light.jpg\";\r\nimport ImageDark from \"assets/img/login-office-dark.jpg\";\r\nimport useLoginSubmit from \"../hooks/useLoginSubmit\";\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation();\r\n  const { onSubmit, register, handleSubmit, errors, loading } =\r\n    useLoginSubmit();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n        <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\r\n          <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n            <div className=\"h-32 md:h-auto md:w-1/2\">\r\n              <img\r\n                aria-hidden=\"true\"\r\n                className=\"object-cover w-full h-full dark:hidden\"\r\n                src={ImageLight}\r\n                alt=\"Office\"\r\n              />\r\n              <img\r\n                aria-hidden=\"true\"\r\n                className=\"hidden object-cover w-full h-full dark:block\"\r\n                src={ImageDark}\r\n                alt=\"Office\"\r\n              />\r\n            </div>\r\n            <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n              <div className=\"w-full\">\r\n                <h1 className=\"mb-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\r\n                  Login\r\n                </h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <LabelArea label=\"Email\" />\r\n                  <InputArea\r\n                    register={register}\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"example@gmail.com\"\r\n                  />\r\n                  <Error errorName={errors.email} />\r\n                  <div className=\"mt-6\"></div>\r\n                  <LabelArea label=\"Password\" />\r\n                  <InputArea\r\n                    register={register}\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"***************\"\r\n                  />\r\n                  <Error errorName={errors.password} />\r\n\r\n                  <Button\r\n                    color={\"#00a6b6\"}\r\n                    disabled={loading}\r\n                    type=\"submit\"\r\n                    className=\"mt-4 h-12 w-full\"\r\n                    to=\"/press\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                  {/* <hr className=\"my-10\" /> */}\r\n                </form>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}